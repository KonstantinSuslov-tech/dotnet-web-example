// <auto-generated />
using System;
using ExampleWeb.Infrastracture.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace ExampleWeb.Infrastracture.Migrations
{
    [DbContext(typeof(PostgresContext))]
    [Migration("20250206161348_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ExampleWeb.Domain.Entities.Contact", b =>
                {
                    b.Property<int>("Ids")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Ids"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("email")
                        .HasComment("Почта");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("phone")
                        .HasComment("Телефон");

                    b.Property<int>("UserId")
                        .HasColumnType("integer")
                        .HasColumnName("user_id")
                        .HasComment("Индетификатор юзера");

                    b.HasKey("Ids")
                        .HasName("pk_contact");

                    b.HasIndex("UserId")
                        .HasDatabaseName("ix_contact_user_id");

                    b.ToTable("contact", null, t =>
                        {
                            t.HasComment("Контакт");
                        });
                });

            modelBuilder.Entity("ExampleWeb.Domain.Entities.Passport", b =>
                {
                    b.Property<int>("Ids")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Ids"));

                    b.Property<DateTimeOffset>("Birthday")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("birthday")
                        .HasComment("День рождения");

                    b.Property<DateTimeOffset>("IssueDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("issue_date")
                        .HasComment("Дата выдачи");

                    b.Property<int>("Number")
                        .HasColumnType("integer")
                        .HasColumnName("number")
                        .HasComment("Номер");

                    b.Property<int>("Series")
                        .HasColumnType("integer")
                        .HasColumnName("series")
                        .HasComment("Серия");

                    b.HasKey("Ids")
                        .HasName("pk_pasport");

                    b.ToTable("pasport", null, t =>
                        {
                            t.HasComment("Паспорт");
                        });
                });

            modelBuilder.Entity("ExampleWeb.Domain.Entities.User", b =>
                {
                    b.Property<int>("Ids")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Ids"));

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("first_name")
                        .HasComment("Имя");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("last_name")
                        .HasComment("Фамилия");

                    b.Property<int>("PassportId")
                        .HasColumnType("integer")
                        .HasColumnName("passport_id")
                        .HasComment("Индетификатор паспорта");

                    b.HasKey("Ids")
                        .HasName("pk_user");

                    b.HasIndex("PassportId")
                        .IsUnique()
                        .HasDatabaseName("ix_user_passport_id");

                    b.ToTable("user", null, t =>
                        {
                            t.HasComment("Пользователь");
                        });
                });

            modelBuilder.Entity("ExampleWeb.Domain.Entities.Contact", b =>
                {
                    b.HasOne("ExampleWeb.Domain.Entities.User", "User")
                        .WithMany("Contacts")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_contact_user_set_user_id");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ExampleWeb.Domain.Entities.User", b =>
                {
                    b.HasOne("ExampleWeb.Domain.Entities.Passport", "Passport")
                        .WithOne("User")
                        .HasForeignKey("ExampleWeb.Domain.Entities.User", "PassportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_user_pasport_passport_id");

                    b.Navigation("Passport");
                });

            modelBuilder.Entity("ExampleWeb.Domain.Entities.Passport", b =>
                {
                    b.Navigation("User")
                        .IsRequired();
                });

            modelBuilder.Entity("ExampleWeb.Domain.Entities.User", b =>
                {
                    b.Navigation("Contacts");
                });
#pragma warning restore 612, 618
        }
    }
}
